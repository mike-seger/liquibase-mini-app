plugins	{	
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core:4.3.1'
	implementation 'org.postgresql:postgresql:42.2.19'
	implementation 'mysql:mysql-connector-java:8.0.23'
	implementation 'com.oracle.database.jdbc:ojdbc10:19.10.0.0'
	implementation 'com.microsoft.sqlserver:mssql-jdbc:9.2.1.jre11'
	implementation 'org.xerial:sqlite-jdbc:3.34.0'
	implementation 'org.hibernate:hibernate-core:5.4.30.Final'
	implementation 'com.github.gwenn:sqlite-dialect:0.1.2'
	implementation 'com.h2database:h2:1.4.200'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}

bootRun {
	def sysProps = System.properties
	file(".env").withInputStream {
		stream -> sysProps.load(stream)
	}
	sysProps.each { prop, val -> systemProperty prop.toString(), val.toString() }
}
